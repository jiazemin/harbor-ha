---
- hosts: pxc
  tasks: 
  - name: make pxc dir
    file:
      path: '{{ item }}'
      state: directory
      mode: 0755
    with_items:
      - '{{ pxc_dir }}'

  - name: install PXC
    yum: 
      name: Percona-XtraDB-Cluster-57
      state: present

  - name: generation my.cnf
    template:
      src: templates/my.cnf.j2
      dest: /etc/my.cnf
    tags:
      - config_mysql

  - name: enable PXC
    systemd:
      name: mysql
      state: started
      enabled: yes

  - name: change password
    shell: |
      init_password=`grep 'temporary password' /var/log/mysqld.log | awk '{print $NF}'`
      mysql -uroot -p"$init_password" --connect-expired-password --execute="ALTER USER 'root'@'localhost' IDENTIFIED BY '{{ pxc_password }}'"
      mysql -uroot -p{{ pxc_password }} --execute="grant all privileges on *.* to root@'%' IDENTIFIED BY '{{ pxc_password }}'"
    register: shell_result

  - name: add sst user
    shell: |
      mysql -uroot -p{{ pxc_password }} --execute="CREATE USER 'sstuser'@'localhost' IDENTIFIED BY '{{ sst_password }}';GRANT RELOAD, LOCK TABLES, PROCESS, REPLICATION CLIENT ON *.* TO 'sstuser'@'localhost';"
    tags:
      - add_sst

  - name: stop PXC
    systemd:
      name: mysql
      state: stopped

  - name: generation wsrep.cnf
    template:
      src: templates/wsrep.cnf.j2
      dest: /etc/wsrep.cnf
    tags:
      - config_wsrep

  - name: bootstrap-pxc Node
    shell: |
      {% for host in ansible_play_batch -%}
        {% if host == inventory_hostname -%}
          {% if loop.index == 1 -%}
            systemctl start mysql@bootstrap.service
          {% else -%}
            service mysql start
          {% endif -%}
        {% endif -%}
      {% endfor -%}
    tags:
      - bootpxc

  - name: install keepalived
    yum:
      name: keepalived
      state: present
    tags:
      - keepalived

  - name: config keepalived
    template:
      src: templates/keepalived.conf.j2
      dest: /etc/keepalived/keepalived.conf
    tags:
      - keepalived

  - name: enable keepalived
    systemd:
      name: keepalived
      state: started
      enabled: yes
    tags:
      - keepalived

  - debug:
      var: shell_result.stdout_lines


